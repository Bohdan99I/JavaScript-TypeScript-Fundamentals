/*
Що таке BOM:

BOM (Browser Object Model) - це об'єктна модель браузера, яка дозволяє JavaScript взаємодіяти з веб-браузером. Вона включає в себе об'єкти, які представляють вікно браузера і його компоненти (напр. історію переглядів, інформацію про екран, навігацію і місцезнаходження).
*/

/*
Яка різниця між BOM та DOM:

- DOM (Document Object Model) - це модель документа, яка представляє структуру HTML або XML документа у вигляді дерева об'єктів.
- BOM (Browser Object Model) - це модель браузера, яка дозволяє взаємодіяти з компонентами браузера поза межами документа (напр. робота з вікнами, історією переглядів, екраном).

DOM відповідає за структуру і зміст веб-сторінки, а BOM за взаємодію з браузером.
*/

/*
Які основні обʼєкти доступні від BOM, коротко опишіть їх призначення:

1. window: головний об'єкт, що представляє вікно браузера. Він є глобальним об'єктом і містить інші об'єкти BOM.
2. document: об'єкт, що представляє поточний документ HTML або XML. Доступний як частина BOM і DOM.
3. navigator: об'єкт, що містить інформацію про браузер і операційну систему користувача.
4. screen: об'єкт, що містить інформацію про екран користувача (напр. роздільна здатність).
5. location: об'єкт, що містить інформацію про поточний URL сторінки і дозволяє змінювати його.
6. history: об'єкт, що дозволяє взаємодіяти з історією переглядів браузера (перехід вперед/назад).
*/

/*
Яким чином можна отримати геолокацію девайсу:

За допомогою API геолокації:
navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
*/

/*
Що таке подія, які бувають типи подій:

Подія - це сигнал про те, що щось відбулося (напр. клік миші, натискання клавіші, завантаження сторінки). Типи подій:
1. Події миші: click, dblclick, mouseenter, mouseleave, mousemove.
2. Події клавіатури: keydown, keyup, keypress.
3. Події документа: DOMContentLoaded, load, unload.
4. Події форми: submit, change, input, focus, blur.
*/

/*
Яка різниця між mouseenter та mousehover подіями:

- mouseenter: подія відбувається, коли курсор миші заходить на елемент.
- mouseover: подія відбувається, коли курсор миші заходить на елемент або його дочірні елементи.

mouseover спрацьовує на будь-якому елементі всередині поточного елемента, тоді як mouseenter спрацьовує тільки один раз для поточного елемента.
*/

/*
Які є варіанти створення обробника на певну подію:

1. Використання атрибутів HTML:
   <button onclick="handleClick()">Click me</button>

2. Призначення обробника через властивість об'єкта:
   element.onclick = function() { handleClick(); };

3. Використання addEventListener:
   element.addEventListener('click', handleClick);
*/

/*
Яка різниця між onclick та addEventListener("click", callback):

- onclick: дозволяє призначити тільки один обробник події, перезаписує попередній обробник.
- addEventListener: дозволяє призначити кілька обробників події, додає новий обробник без перезапису попередніх.
*/

/*
Що таке спливання подій та як його зупинити:

Спливання подій (event bubbling) - це процес, при якому подія, яка відбулася на одному елементі, піднімається вгору по дереву DOM до самого кореневого елемента. Щоб зупинити спливання подій, використовуйте метод event.stopPropagation():
event.stopPropagation();
*/

/*
Що таке event.target та яка відмінність між event.currentTarget:

- event.target: елемент, на якому спочатку відбулася подія.
- event.currentTarget: елемент, до якого прив'язаний обробник події.

event.target може бути дочірнім елементом відносно event.currentTarget, якщо подія спливає.
*/
