/*
Типи даних в JavaScript та їх основна різниця:

JavaScript має 8 основних типів даних:

1. Примітивні типи:
   - String: рядок символів, наприклад, "hello".
   - Number: числовий тип, включаючи цілі числа та числа з плаваючою комою.
   - BigInt: великі цілі числа, які перевищують діапазон Number.
   - Boolean: логічний тип, який має два значення: true або false.
   - Undefined: значення, яке означає, що змінна не має присвоєного значення.
   - Null: спеціальне значення, яке представляє відсутність значення.
   - Symbol: унікальний і незмінний тип даних, який використовується як ідентифікатор для властивостей об'єктів.

2. Об'єктні типи:
   - Object: колекція властивостей і методів.
*/

/*
Різниця між `undefined` та `null`:

- undefined: означає, що змінна була оголошена, але не має присвоєного значення.
- null: є явно присвоєним значенням для змінної, яке вказує на відсутність будь-якого об'єкта чи значення.
*/

/*
Різниця між `var`, `let` та `const`:

- var: має функціональну область видимості, піддається підняттю (hoisting), може бути перевизначена та переприсвоєна.
- let: має блочну область видимості, піддається підняттю, але не може бути використана до оголошення, може бути переприсвоєна.
- const: має блочну область видимості, піддається підняттю, але не може бути використана до оголошення, не може бути переприсвоєна.
*/

/*
Різниця між ECMAScript та JavaScript:

- ECMAScript: це стандарт, на основі якого розробляються реалізації мов програмування, зокрема JavaScript.
- JavaScript: мова програмування, що реалізує специфікацію ECMAScript.
*/

/*
Динамічна типізація:

Динамічна типізація означає, що змінні можуть містити значення будь-якого типу і тип змінної може змінюватися під час виконання програми. Це також називають слабкою типізацією.
*/

/*
Варіанти додавання JS коду до сторінки:

1. Внутрішній JS: за допомогою тегу <script> безпосередньо в HTML-коді.
2. Зовнішній JS: за допомогою тегу <script src="path/to/file.js"></script>, посилаючись на зовнішній файл.
3. Інлайн JS: всередині HTML-атрибутів (наприклад, onclick="alert('Hello')").
*/

/*
Обмеження для коду, написаного на JS, який запускається в браузері:

1. Безпека: JS в браузері працює в ізольованому середовищі (пісочниця) для захисту від несанкціонованого доступу до системних ресурсів.
2. Доступ до файлової системи: обмежений.
3. Крос-доменний доступ: обмежений правилами політики одного джерела (same-origin policy).
*/

/*
Різниця між компільованою та інтерпретованою мовою програмування:

- Компільована мова: код компілюється в машинний код перед виконанням, що дозволяє швидше виконувати програми (наприклад, C, C++).
- Інтерпретована мова: код виконується безпосередньо інтерпретатором без попередньої компіляції (наприклад, Python, JavaScript).

JavaScript відноситься до інтерпретованих мов, хоча сучасні браузери часто використовують JIT-компіляцію (Just-In-Time), щоб покращити продуктивність.
*/
